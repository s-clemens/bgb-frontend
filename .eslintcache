[{"C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\index.js":"1","C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\App.js":"2","C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\reportWebVitals.js":"3","C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\Pages\\Home\\Home.js":"4","C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\Pages\\Profile\\Profile.js":"5","C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\Pages\\Login\\Login.js":"6","C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\Pages\\Signup\\Signup.js":"7","C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\Components\\TopMenu.js":"8","C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\context\\AuthContext.js":"9","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\index.js":"10","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\reportWebVitals.js":"11","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\App.js":"12","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\context\\AuthContext.js":"13","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\TopMenu.js":"14","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Pages\\Home\\Home.js":"15","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Pages\\Profile\\Profile.js":"16","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Pages\\Login\\Login.js":"17","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Pages\\Signup\\Signup.js":"18","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\Page.js":"19","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\pagetitile\\Pagetitle.js":"20","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\LineBreak\\LineBreak.js":"21","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\Image\\Image.js":"22","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Pages\\Signup\\errorMessage.js":"23","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\contentcontainer\\ContentContainer.js":"24","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\itemcontainer\\ItemContainer.js":"25","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\dashboarditem\\DashboardItem.js":"26","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Pages\\ProductAdd\\ProductAdd.js":"27"},{"size":747,"mtime":1611066762023,"results":"28","hashOfConfig":"29"},{"size":1544,"mtime":1613134556343,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":220,"mtime":1610711478054,"results":"32","hashOfConfig":"29"},{"size":642,"mtime":1614192276300,"results":"33","hashOfConfig":"29"},{"size":2622,"mtime":1614193529315,"results":"34","hashOfConfig":"29"},{"size":3451,"mtime":1614193096769,"results":"35","hashOfConfig":"29"},{"size":1314,"mtime":1613213898883,"results":"36","hashOfConfig":"29"},{"size":5027,"mtime":1614196071257,"results":"37","hashOfConfig":"29"},{"size":747,"mtime":1611066762023,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":1594,"mtime":1614361292493,"results":"41","hashOfConfig":"39"},{"size":4883,"mtime":1614358734456,"results":"42","hashOfConfig":"39"},{"size":2293,"mtime":1614359815867,"results":"43","hashOfConfig":"39"},{"size":2658,"mtime":1614377184231,"results":"44","hashOfConfig":"39"},{"size":3485,"mtime":1614377184270,"results":"45","hashOfConfig":"39"},{"size":4706,"mtime":1614377184286,"results":"46","hashOfConfig":"39"},{"size":3761,"mtime":1614362990903,"results":"47","hashOfConfig":"39"},{"size":287,"mtime":1614270351117,"results":"48","hashOfConfig":"39"},{"size":179,"mtime":1614289417809,"results":"49","hashOfConfig":"39"},{"size":406,"mtime":1614377068851,"results":"50","hashOfConfig":"39"},{"size":229,"mtime":1614344645905,"results":"51","hashOfConfig":"39"},{"size":938,"mtime":1614376799614,"results":"52","hashOfConfig":"39"},{"size":273,"mtime":1614339807665,"results":"53","hashOfConfig":"39"},{"size":262,"mtime":1614351534124,"results":"54","hashOfConfig":"39"},{"size":631,"mtime":1614356663677,"results":"55","hashOfConfig":"39"},{"size":10993,"mtime":1614377184247,"results":"56","hashOfConfig":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1q18xc3",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"k4au7w",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},"C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\index.js",[],["121","122"],"C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\App.js",[],"C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\reportWebVitals.js",[],"C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\Pages\\Home\\Home.js",[],"C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\Pages\\Profile\\Profile.js",[],"C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\Pages\\Login\\Login.js",[],"C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\Pages\\Signup\\Signup.js",[],["123","124"],"C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\Components\\TopMenu.js",[],"C:\\Users\\sidcl\\WebstormProjects\\react-loging-lesson\\src\\context\\AuthContext.js",["125"],"// We willen in de context bijhouden of we op dit moment:\r\n// Gebruikersdata hebben\r\n// en of de gebruiker geautoriseerd is om data te mogen bekijken.\r\n\r\nimport React, {createContext, useContext, useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = createContext({})\r\n\r\nfunction AuthContextProvider({ children }) {\r\n\r\n    const [authState, setAuthState] = useState({\r\n        status: 'pending',\r\n        error: null,\r\n        user: null,\r\n    })\r\n\r\n    // useEffect( () => {\r\n    //     // Haal uit de local storage de JWT Token\r\n    //     const token = localStorage.getItem('token')\r\n    //     // Als die er niet is kunnen we gewoon verder\r\n    //     // Als die er wel is dan betekent dat de applicatie herstart is\r\n    //     // En dan willen we nog even onze gebruikersdata (username, etc) ophalen.\r\n    //     setTimeout(() => {\r\n    //         // er is geen token, dus we beginnen met een schone lei!\r\n    //         setAuthState({\r\n    //             ...authState,\r\n    //             status: 'done',\r\n    //         })\r\n    //     }, 2000)\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        async function getUserInfo() {\r\n            try {\r\n                console.log(\"banaan\")\r\n                console.log(token)\r\n                // We kunnen de gebruikersdata ophalen omdat we onszelf authenticeren met de token\r\n                const response = await axios.get('http://localhost:8080/api/auth/token-check', {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${token}`,\r\n                        },\r\n                    }\r\n                );\r\n                console.log(\"banaan2\")\r\n\r\n                console.log(response);\r\n\r\n                // met het resultaat vullen we de context\r\n                setAuthState({\r\n                    ...authState,\r\n                    user: {\r\n                        id: response.id,\r\n                        username: response.username,\r\n                        email: response.email,\r\n                    },\r\n                    status: 'done',\r\n                });\r\n\r\n            } catch (e) {\r\n                // Gaat er toch iets mis? Dan zetten we de error in de context\r\n                setAuthState({\r\n                    ...authState,\r\n                    user: null,\r\n                    error: e,\r\n                    status: 'done'\r\n                });\r\n            }\r\n        }\r\n\r\n        // als we GEEM userinformatie meer in de applicatie hebben, maar er staat WEL een token in\r\n        // local storage, gaan we handmatig de gebuikersdata ophalen door de getUserInfo functie van hierboven aan te roepen\r\n        if (authState.user === null && token) {\r\n            getUserInfo();\r\n        } else {\r\n            // Als er geen ingelogde gebruiker hoeft te zijn, zetten we de context naar de basis state\r\n            setAuthState({\r\n                ...authState,\r\n                error: null,\r\n                user: null,\r\n                status: 'done'\r\n            });\r\n        }\r\n    }, []);\r\n\r\n\r\n    // de token willen we in de local storage zetten\r\n    function login(data) {\r\n        console.log(data)\r\n        localStorage.setItem('token', data.accessToken)\r\n\r\n        // de user-info willen we in de context zetten\r\n        setAuthState({\r\n            ...authState,\r\n            user: {\r\n                username: data.username,\r\n                email: data.email,\r\n                roles: data.roles,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    function logout(){\r\n        // 1. Maak local storage leeg\r\n        localStorage.clear();\r\n        // 2. Haal de user uit de context-state.\r\n        setAuthState({\r\n            ...authState,\r\n            user: null,\r\n        })\r\n\r\n    }\r\n\r\n    // De ... zorgt ervoor dat hij gaat kijken naar wat authState is, als je dit niet doet overschrijft hij de data\r\n    const providerData = {\r\n        ...authState,\r\n        login,\r\n        logout,\r\n        // logout, (functie zit er nog niet in)\r\n    }\r\n\r\n    return(\r\n        // Checkt of de Autstate done of pending is, als done dan laat hij de app zien, anders loading..\r\n        <AuthContext.Provider value={providerData}>\r\n            {authState.status === 'done' && children}\r\n            {authState.status === 'pending' && <p>Loading..</p>}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nfunction useAuthState(){\r\n    const authState = useContext(AuthContext);\r\n    // Iemand is geauthoriseerd wanneer de status === 'done'\r\n    // En als er een gebruiker in de authState staat\r\n    const isDone = authState.status === 'done';\r\n    const isAuthenticated = authState.user !== null && isDone;\r\n    console.log('Ik ben Authenticated:', isAuthenticated);\r\n\r\n    return{\r\n        ...authState,\r\n        isAuthenticated: isAuthenticated,\r\n    }\r\n}\r\n\r\n// Exports so it can be imported by other files\r\nexport {\r\n    AuthContext,\r\n    useAuthState,\r\n    AuthContextProvider\r\n}\r\n","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\index.js",[],["126","127"],"C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\App.js",["128"],"import './App.css';\nimport { Redirect, Switch, Route,} from 'react-router-dom';\nimport Home from './Pages/Home/Home';\nimport Login from './Pages/Login/Login';\nimport Profile from './Pages/Profile/Profile';\nimport Signup from './Pages/Signup/Signup';\nimport TopMenu from \"./Components/TopMenu\";\nimport {useAuthState} from \"./context/AuthContext\";\nimport ProductAdd from \"./Pages/ProductAdd/ProductAdd\";\n\n// Methode voor private route als de gebruiker vaker gecheckt moet worden.\nfunction PrivateRoute({ children, ...rest}) {\n    const { isAuthenticated } = useAuthState();\n\n    return (\n        <Route { ...rest } render={() => {\n        return isAuthenticated ? children : <Redirect to=\"/sign-in\"/>\n        }}/>\n    );\n}\n\nfunction AdminRoute({ children, ...rest}) {\n    const { isAdmin } = useAuthState();\n\n    return (\n        <Route { ...rest } render={() => {\n            return isAdmin ? children : <Redirect to=\"/\"/>\n        }}/>\n    );\n}\n\n\nfunction App() {\n\n    const { isAuthenticated } = useAuthState();\n\n\n  return (\n      <>\n          <TopMenu/>\n\n          <Switch>\n            <Route exact path=\"/\">\n                <Home />\n            </Route>\n            <Route path=\"/sign-in\">\n                <Login />\n            </Route>\n            <AdminRoute exact path=\"/add-product\">\n                <ProductAdd />\n            </AdminRoute>\n            <PrivateRoute exact path=\"/profile\">\n                <Profile />\n            </PrivateRoute>\n            <Route path=\"/sign-up\">\n                <Signup />\n            </Route>\n          </Switch>\n      </>\n  );\n}\n\nexport default App;\n","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\context\\AuthContext.js",["129"],"// We willen in de context bijhouden of we op dit moment:\r\n// Gebruikersdata hebben\r\n// en of de gebruiker geautoriseerd is om data te mogen bekijken.\r\n\r\nimport React, {createContext, useContext, useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = createContext({})\r\n\r\nfunction AuthContextProvider({ children }) {\r\n\r\n    const [authState, setAuthState] = useState({\r\n        status: 'pending',\r\n        error: null,\r\n        user: null,\r\n    })\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        async function getUserInfo() {\r\n            try {\r\n                console.log(\"banaan\")\r\n                console.log(token)\r\n                // We kunnen de gebruikersdata ophalen omdat we onszelf authenticeren met de token\r\n                const response = await axios.get('http://localhost:8080/api/auth/token-check', {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${token}`,\r\n                        },\r\n                    }\r\n                );\r\n                console.log(\"banaan2\")\r\n\r\n                console.log(response);\r\n\r\n                // met het resultaat vullen we de context\r\n                setAuthState({\r\n                    ...authState,\r\n                    user: {\r\n                        id: response.id,\r\n                        username: response.username,\r\n                        email: response.email,\r\n                    },\r\n                    status: 'done',\r\n                });\r\n\r\n            } catch (e) {\r\n                // Gaat er toch iets mis? Dan zetten we de error in de context\r\n                setAuthState({\r\n                    ...authState,\r\n                    user: null,\r\n                    error: e,\r\n                    status: 'done'\r\n                });\r\n            }\r\n        }\r\n\r\n        // als we GEEM userinformatie meer in de applicatie hebben, maar er staat WEL een token in\r\n        // local storage, gaan we handmatig de gebuikersdata ophalen door de getUserInfo functie van hierboven aan te roepen\r\n        if (authState.user === null && token) {\r\n            getUserInfo();\r\n        } else {\r\n            // Als er geen ingelogde gebruiker hoeft te zijn, zetten we de context naar de basis state\r\n            setAuthState({\r\n                ...authState,\r\n                error: null,\r\n                user: null,\r\n                status: 'done'\r\n            });\r\n        }\r\n    }, []);\r\n\r\n\r\n    // de token willen we in de local storage zetten\r\n    function login(data) {\r\n        console.log(data)\r\n        localStorage.setItem('token', data.accessToken)\r\n\r\n        // de user-info willen we in de context zetten\r\n        setAuthState({\r\n            ...authState,\r\n            user: {\r\n                username: data.username,\r\n                email: data.email,\r\n                roles: data.roles,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    function logout(){\r\n        // 1. Maak local storage leeg\r\n        localStorage.clear();\r\n        // 2. Haal de user uit de context-state.\r\n        setAuthState({\r\n            ...authState,\r\n            user: null,\r\n        })\r\n\r\n    }\r\n\r\n    // De ... zorgt ervoor dat hij gaat kijken naar wat authState is, als je dit niet doet overschrijft hij de data\r\n    const providerData = {\r\n        ...authState,\r\n        login,\r\n        logout,\r\n        // logout, (functie zit er nog niet in)\r\n    }\r\n\r\n    return(\r\n        // Checkt of de Autstate done of pending is, als done dan laat hij de app zien, anders loading..\r\n        <AuthContext.Provider value={providerData}>\r\n            {authState.status === 'done' && children}\r\n            {authState.status === 'pending' && <p>Loading..</p>}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nfunction useAuthState(){\r\n    const authState = useContext(AuthContext);\r\n    // Iemand is geauthoriseerd wanneer de status === 'done'\r\n    // En als er een gebruiker in de authState staat\r\n    const isDone = authState.status === 'done';\r\n    const isAuthenticated = authState.user !== null && isDone;\r\n\r\n    // Const voor checken of gebruiker admin is.\r\n    let isAdmin = false;\r\n    if (authState.user !== null){\r\n        for (let i = 0; i < authState.user.roles.length; i++) {\r\n            if (authState.user.roles[i] === \"ROLE_ADMIN\"){\r\n                isAdmin = true;\r\n            }\r\n        }\r\n\r\n        if (authState.user.roles[1] === \"ROLE_ADMIN\"){\r\n            isAdmin = true;\r\n        }\r\n    }\r\n    console.log('Ik ben Authenticated:', isAuthenticated);\r\n    console.log('Ik ben een admin:', isAdmin)\r\n\r\n    return{\r\n        ...authState,\r\n        isAuthenticated: isAuthenticated,\r\n        isAdmin: isAdmin,\r\n    }\r\n}\r\n\r\n// Exports so it can be imported by other files\r\nexport {\r\n    AuthContext,\r\n    useAuthState,\r\n    AuthContextProvider\r\n}\r\n","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\TopMenu.js",["130"],"import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AuthContext, useAuthState } from \"../context/AuthContext\";\r\nimport { useContext } from 'react';\r\nimport logo from '../images/logos/BGB_White.png';\r\nimport \"./TopMenu.css\";\r\n\r\nfunction TopMenu() {\r\n\r\n    // context dingen\r\n    const { isAuthenticated, user } = useAuthState();\r\n    const { logout } = useContext(AuthContext)\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n            <div className=\"nav-container1\">\r\n                <div className=\"nav-container2\">\r\n                    <img src={logo} height={\"50px\"} alt={\"bgb white logo\"}/>\r\n                </div>\r\n                    <div className=\"nav-container3\">\r\n                            <ul>\r\n                                <li>\r\n                                    <NavLink activeStyle={{textDecoration: 'underline'}} exact to=\"/\">HOME</NavLink>\r\n                                </li>\r\n\r\n                                <li>\r\n                                    <NavLink activeStyle={{textDecoration: 'underline'}} exact to=\"/sign-up\">RESERVEREN</NavLink>\r\n                                </li>\r\n\r\n                                <li>\r\n                                <NavLink activeStyle={{textDecoration: 'underline'}} exact to=\"/\">AANBOD</NavLink>\r\n                                </li>\r\n                                {isAuthenticated ?\r\n                                    (<li>\r\n                                        <NavLink activeStyle={{textDecoration: 'underline'}} exact to=\"/profile\">DASHBOARD</NavLink>\r\n                                    </li>)\r\n                                    : (\r\n                                    <li>\r\n                                        <NavLink  exact to=\"/sign-in\">INLOGGEN</NavLink>\r\n                                    </li>)\r\n                                }\r\n\r\n                            </ul>\r\n                    </div>\r\n                <div className=\"nav-container4\">\r\n                    {isAuthenticated ?\r\n                        (<NavLink exact to=\"/Profile\">Logged in as: {user.username}</NavLink>)\r\n                    :\r\n                        (<p> test </p>)}\r\n                </div>\r\n            </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TopMenu;\r\n","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Pages\\Home\\Home.js",[],"C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Pages\\Profile\\Profile.js",[],"C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Pages\\Login\\Login.js",["131","132"],"C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Pages\\Signup\\Signup.js",[],"C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\Page.js",[],"C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\pagetitile\\Pagetitle.js",[],"C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\LineBreak\\LineBreak.js",[],"C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\Image\\Image.js",["133"],"import React from \"react\";\r\nimport \"./Image.css\";\r\n\r\nconst Image = ({src, banaan, id}) => {\r\n\r\n    return(\r\n        <div className={banaan}>\r\n            <img id={id} src={src}  />\r\n        </div>\r\n    )\r\n}\r\nexport default Image;","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Pages\\Signup\\errorMessage.js",[],"C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\contentcontainer\\ContentContainer.js",[],"C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\itemcontainer\\ItemContainer.js",[],"C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Components\\dashboarditem\\DashboardItem.js",["134"],"import React from 'react';\r\nimport \"./DashboardItem.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DashboardItem = ({name, path, icon}) => {\r\n\r\n    return(\r\n        <>\r\n            <NavLink to={path}>\r\n                <div className={'dashboard-item'}>\r\n                    <div className={'dashboard-item-icon'}>\r\n                        <img src={icon}/>\r\n                    </div>\r\n                    <div className={'dashboard-item-name'}>\r\n                        <p>{name}</p>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default DashboardItem;","C:\\Users\\sidcl\\Desktop\\Board Game Bunker Applicatie\\bgb-frontend\\src\\Pages\\ProductAdd\\ProductAdd.js",["135","136","137","138","139","140","141","142","143","144","145","146","147"],"import {useAuthState} from \"../../context/AuthContext\";\r\nimport Page from \"../../Components/Page\";\r\nimport Pagetitle from \"../../Components/pagetitile/Pagetitle\";\r\nimport LineBreak from \"../../Components/LineBreak/LineBreak\";\r\nimport ContentContainer from \"../../Components/contentcontainer/ContentContainer\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport Image from \"../../Components/Image/Image\";\r\nimport shield from \"../../images/icons/shield-alt-solid.svg\"\r\nimport \"./Productadd.css\";\r\nimport ErrorMessage from \"../Signup/errorMessage\";\r\n\r\nlet producttype = '';\r\nconst endpointlink = `http://localhost:8080/api/product/${producttype}`\r\n\r\n\r\n\r\nfunction ProductAdd() {\r\n\r\n\r\n    const { user, isAdmin } = useAuthState()\r\n\r\n    const { handleSubmit, register, errors, setError, clearError} = useForm();\r\n\r\n    // State voor gebruikers-feedback\r\n    const [createSucces, setCreateSucces] = useState(false);\r\n    // Zorgt voor state waarin we button value e.d. kunnen aanpassen op state.\r\n    const [loading, toggleLoading] = useState(false);\r\n    const [submitError, setSubmitError] = useState('');\r\n\r\n    const [productTypeSelection, setProductTypeSelection] = useState('');\r\n\r\n    const [coverImageString, setCoverImageString] = useState();\r\n\r\n    async function handleUpload(e){\r\n        const file = e.target.files[0];\r\n        const MYSTRING = await convertBase64(file)\r\n        setCoverImageString(MYSTRING);\r\n        console.log(MYSTRING);\r\n    }\r\n\r\n\r\n\r\n    function handleChange(e) {\r\n        setProductTypeSelection(e.target.value)\r\n        console.log(productTypeSelection);\r\n    }\r\n\r\n    // Als form wordt submit:\r\n    async function onFormSubmit(data){\r\n        console.log(data);\r\n        toggleLoading(true);\r\n        setSubmitError('')\r\n        if (productTypeSelection === 'BOARD_GAME'){\r\n            producttype = 'postboardgame'\r\n        }\r\n        if (productTypeSelection === 'CONSUMABLES'){\r\n            producttype = 'postconsumable'\r\n        }\r\n        try {\r\n\r\n            const token = localStorage.getItem('token');\r\n            console.log(token)\r\n            const response = await axios.post(endpointlink + producttype,{\r\n                    name: data.name,\r\n                    producttype: data.producttype,\r\n                    price: data.price,\r\n                    ingredients: data.ingredients,\r\n                    consumabletype: data.consumabletype,\r\n                    coverimage: coverImageString,\r\n\r\n                    description: data.description,\r\n                    boardgametype: data.boardgametype,\r\n                    minplayers: data.minplayers,\r\n                    maxplayers: data.maxplayers,\r\n                    totalstock: data.totalstock\r\n            },\r\n                {\r\n\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    }\r\n                }\r\n                );\r\n            console.log(\"de volgende data is verstuurd:\")\r\n            console.log(response.data);\r\n            {response.data && setCreateSucces(true)}\r\n        } catch(e) {\r\n            console.log(e);\r\n            if (e.message.includes('400')) {\r\n                setSubmitError('Er bestaat al een account met deze username.')\r\n            } else {\r\n                setSubmitError('Er is iets misgegeaan bij het verzenden. Probeer het opnieuw.')\r\n            }\r\n        }\r\n        toggleLoading(false);\r\n    }\r\n\r\n    const convertBase64 = (file) => {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const fileReader = new FileReader()\r\n            fileReader.readAsDataURL(file)\r\n            fileReader.onload = (() => {\r\n\r\n                resolve(fileReader.result);\r\n\r\n            });\r\n            fileReader.onerror = ((error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Page>\r\n            <div className=\"page-container\">\r\n                <Pagetitle>PRODUCT TOEVOEGEN</Pagetitle>\r\n                <LineBreak width={'80%'} color={'black'} >\"\"</LineBreak>\r\n\r\n                <ContentContainer id={'dashboard-container'}>\r\n                    <p className={\"important-text\"}>Vul onderstaand formulier in om een product toe te voegen</p>\r\n                    <p className={'small-text'}>Alle velden zijn verplicht.</p>\r\n                </ContentContainer>\r\n\r\n                <form onSubmit={handleSubmit(onFormSubmit)}>\r\n                    <fieldset>\r\n\r\n                    <ContentContainer id={'dashboard-container'}>\r\n                        <p className={'text-entry'}>Product informatie:</p>\r\n\r\n                        <label className={'text-entry'} htmlFor=\"details-name\">\r\n                            Naam:<br/>\r\n                            <input type=\"text\" name=\"name\" id=\"details-name\" ref={register({required: true, minLength: 2})}/>\r\n                            <ErrorMessage error={errors.name}/>\r\n                        </label>\r\n\r\n                        <label className={'text-entry'}>Producttype:</label>\r\n                        <select className={'text-entry'}name=\"producttype\" ref={register({ required: true })} onChange={handleChange}>\r\n                            <option value=\"\">Select...</option>\r\n                            <option value=\"BOARD_GAME\">Boardgame</option>\r\n                            <option value=\"CONSUMABLES\">Etenswaren</option>\r\n                        </select>\r\n                        <ErrorMessage error={errors.gender} />\r\n\r\n\r\n\r\n                        <label id={'text-entry'} htmlFor=\"details-file\">\r\n                            Afbeelding:<br/>\r\n                            <input type=\"file\" name=\"file\" id=\"details-file\" ref={register({required: true})}\r\n                                   onChange={handleUpload}/>\r\n                            <ErrorMessage error={errors.file}/>\r\n                        </label>\r\n\r\n                        <label className={'text-entry'} htmlFor=\"details-price\">\r\n                            Prijs:<br/>\r\n                            <input type=\"number\" step='0.01' name=\"price\" id=\"details-price\" ref={register({required: true})}/>\r\n                            <ErrorMessage error={errors.price}/>\r\n                        </label>\r\n\r\n                    </ContentContainer>\r\n\r\n                    {productTypeSelection === 'BOARD_GAME' ?\r\n                        (\r\n                            <ContentContainer id={'dashboard-container'}>\r\n                                <p className={\"form-text\"}>Boardgame informatie:</p>\r\n\r\n                                <label className={'text-entry'} htmlFor=\"details-description\">\r\n                                    Beschrijving:<br/>\r\n                                    <textarea type=\"textarea\" name=\"description\" id=\"details-description\" ref={register({required: true, maxLength: 50})}/>\r\n                                    <ErrorMessage error={errors.description}/>\r\n                                </label>\r\n\r\n                                <label>Spel duur:</label>\r\n                                <select name=\"boardgametype\" ref={register({ required: true })}>\r\n                                    <option value=\"\">Select...</option>\r\n                                    <option value=\"THIRTY_MINUTES\">30 minuten</option>\r\n                                    <option value=\"ONE_HOUR\">1 uur</option>\r\n                                    <option value=\"TWO_HOURS\">2 uur</option>\r\n                                </select>\r\n                                <ErrorMessage error={errors.producttype} />\r\n\r\n                                <label className={'text-entry'} htmlFor=\"details-minplayers\">\r\n                                    Minimaal aantal spelers:<br/>\r\n                                    <input type=\"number\" name=\"minplayers\" id=\"details-minplayers\" ref={register({required: true})}/>\r\n                                    <ErrorMessage error={errors.minplayers}/>\r\n                                </label>\r\n\r\n                                <label className={'text-entry'} htmlFor=\"details-maxplayers\">\r\n                                    Maximaal aantal spelers:<br/>\r\n                                    <input type=\"number\" name=\"maxplayers\" id=\"details-maxplayers\" ref={register({required: true})}/>\r\n                                    <ErrorMessage error={errors.maxplayers}/>\r\n                                </label>\r\n\r\n                                <label className={'text-entry'} htmlFor=\"details-totalstock\">\r\n                                    Totaal op voorraad:<br/>\r\n                                    <input type=\"number\" name=\"totalstock \" id=\"details-totalstock\" ref={register({required: true})}/>\r\n                                    <ErrorMessage error={errors.maxplayers}/>\r\n                                </label>\r\n\r\n                                <button type=\"submit\">Log in</button>\r\n                                {submitError && <p className={'error-form-text'}>{submitError}</p>}\r\n\r\n                            </ContentContainer>\r\n\r\n                        ) : productTypeSelection === 'CONSUMABLES' ? (\r\n\r\n                            <ContentContainer id={'dashboard-container'}>\r\n                                <p className={\"form-text\"}>Etenswaren informatie:</p>\r\n                                <label className={'text-entry'} htmlFor=\"details-ingredients\">\r\n                                    Beschrijving:<br/>\r\n                                    <textarea type=\"textarea\" name=\"ingredients\" id=\"details-ingredients\" ref={register({required: true, maxLength: 50})}/>\r\n                                    <ErrorMessage error={errors.ingredients}/>\r\n                                </label>\r\n\r\n                                <label>Type:</label>\r\n                                <select name=\"consumabletype\" ref={register({ required: true })}>\r\n                                    <option value=\"\">Select...</option>\r\n                                    <option value=\"FOOD\">Eten</option>\r\n                                    <option value=\"DRINKS\">Drinken</option>\r\n                                </select>\r\n                                <ErrorMessage error={errors.consumabletype} />\r\n\r\n                                <button type=\"submit\">Log in</button>\r\n                                {submitError && <p className={'error-form-text'}>{submitError}</p>}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            </ContentContainer>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        ) : (<span></span>)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <ContentContainer id={'dashboard-container'}>\r\n\r\n\r\n                    </ContentContainer>\r\n\r\n\r\n\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default ProductAdd;\r\n",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"148","replacedBy":"152"},{"ruleId":"150","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":87,"column":8,"nodeType":"156","endLine":87,"endColumn":10,"suggestions":"157"},{"ruleId":"148","replacedBy":"158"},{"ruleId":"150","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":35,"column":13,"nodeType":"162","messageId":"163","endLine":35,"endColumn":28},{"ruleId":"154","severity":1,"message":"155","line":72,"column":8,"nodeType":"156","endLine":72,"endColumn":10,"suggestions":"164"},{"ruleId":"160","severity":1,"message":"165","line":12,"column":13,"nodeType":"162","messageId":"163","endLine":12,"endColumn":19},{"ruleId":"160","severity":1,"message":"166","line":31,"column":45,"nodeType":"162","messageId":"163","endLine":31,"endColumn":53},{"ruleId":"160","severity":1,"message":"167","line":31,"column":55,"nodeType":"162","messageId":"163","endLine":31,"endColumn":65},{"ruleId":"168","severity":1,"message":"169","line":8,"column":13,"nodeType":"170","endLine":8,"endColumn":39},{"ruleId":"168","severity":1,"message":"169","line":13,"column":25,"nodeType":"170","endLine":13,"endColumn":42},{"ruleId":"160","severity":1,"message":"171","line":9,"column":17,"nodeType":"162","messageId":"163","endLine":9,"endColumn":27},{"ruleId":"160","severity":1,"message":"172","line":9,"column":29,"nodeType":"162","messageId":"163","endLine":9,"endColumn":38},{"ruleId":"160","severity":1,"message":"173","line":10,"column":10,"nodeType":"162","messageId":"163","endLine":10,"endColumn":20},{"ruleId":"160","severity":1,"message":"174","line":10,"column":22,"nodeType":"162","messageId":"163","endLine":10,"endColumn":26},{"ruleId":"160","severity":1,"message":"175","line":11,"column":8,"nodeType":"162","messageId":"163","endLine":11,"endColumn":13},{"ruleId":"160","severity":1,"message":"176","line":12,"column":8,"nodeType":"162","messageId":"163","endLine":12,"endColumn":14},{"ruleId":"160","severity":1,"message":"177","line":24,"column":13,"nodeType":"162","messageId":"163","endLine":24,"endColumn":17},{"ruleId":"160","severity":1,"message":"178","line":24,"column":19,"nodeType":"162","messageId":"163","endLine":24,"endColumn":26},{"ruleId":"160","severity":1,"message":"166","line":26,"column":45,"nodeType":"162","messageId":"163","endLine":26,"endColumn":53},{"ruleId":"160","severity":1,"message":"167","line":26,"column":55,"nodeType":"162","messageId":"163","endLine":26,"endColumn":65},{"ruleId":"160","severity":1,"message":"179","line":29,"column":12,"nodeType":"162","messageId":"163","endLine":29,"endColumn":24},{"ruleId":"160","severity":1,"message":"180","line":31,"column":12,"nodeType":"162","messageId":"163","endLine":31,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":91,"column":13,"nodeType":"183","messageId":"184","endLine":91,"endColumn":53},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],["185"],["186"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.","ArrayExpression",["187"],["185"],["186"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar",["188"],"'logout' is assigned a value but never used.","'setError' is assigned a value but never used.","'clearError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'Link' is defined but never used.","'Image' is defined but never used.","'shield' is defined but never used.","'user' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","'createSucces' is assigned a value but never used.","'loading' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"189","fix":"191"},"Update the dependencies array to be: [authState]",{"range":"192","text":"193"},{"range":"194","text":"193"},[3148,3150],"[authState]",[2528,2530]]